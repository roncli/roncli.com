events {
    worker_connections 1024;
}

http {
    map $time_iso8601 $time_iso8601_p1 {
        ~([^+]+) $1;
    }
    map $time_iso8601 $time_iso8601_p2 {
        ~\+([0-9:]+)$ $1;
    }
    map $msec $millisec {
        ~\.([0-9]+)$ $1;
    }

    log_format fullformat '$remote_addr - $remote_user [$time_iso8601_p1.$millisec+$time_iso8601_p2] $server_name $server_port "$request" $status $body_bytes_sent $request_time "$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log fullformat;

    server {
        listen 80;
        server_name roncli.com;
        server_name www.roncli.com;

        location /.well-known/ {
            root /var/certbot/work/roncli.com/.well-known;
        }

        location / {
            return 301 https://roncli.com$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name roncli.com;

        ssl_certificate /etc/letsencrypt/live/roncli.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/roncli.com/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_http_version 1.1;
            proxy_pass http://node-roncli-com:3030/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name photos.roncli.com;

        location /.well-known/ {
            root /var/certbot/work/photos.roncli.com/.well-known;
        }

        location / {
            return 301 https://photos.roncli.com$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name photos.roncli.com;

        ssl_certificate /etc/letsencrypt/live/photos.roncli.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/photos.roncli.com/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        client_max_body_size 500M; 

        location /api/ {
            limit_except GET HEAD {
                auth_basic "roncli.com Photos";
                auth_basic_user_file /var/nginx/.htpasswd;
            }

            proxy_http_version 1.1;
            proxy_pass http://photoprism:2342/api/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        location / {
            auth_basic "roncli.com Photos";
            auth_basic_user_file /var/nginx/.htpasswd;

            proxy_http_version 1.1;
            proxy_pass http://photoprism:2342/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name ronc.li;

        location /.well-known/ {
            root /var/certbot/work/ronc.li/.well-known;
        }

        location / {
            return 301 https://ronc.li$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ronc.li;

        ssl_certificate /etc/letsencrypt/live/ronc.li/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ronc.li/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_http_version 1.1;
            proxy_pass http://node-ronc-li:3031/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }
    }
}
